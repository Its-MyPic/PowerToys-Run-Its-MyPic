name: build

on: 
  push:
  pull_request:

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        arch: [arm64, x64]

    steps:
      - uses: actions/checkout@v4

      - name: Display dotnet version
        run: dotnet --version

      - name: Generate artifact name
        id: name
        working-directory: ./Community.PowerToys.Run.Plugin.Its-MyPic
        run: |
          $name = "PowerToys-Run-Its-MyPic"
          $hash = $(git rev-parse --short HEAD)
          $version = "v$((Get-Content ./plugin.json | ConvertFrom-Json).Version)-$hash"
          $arch = "${{ matrix.arch }}"
          $artifactName = "$name-$version-$arch"
          echo "Artifact name: $artifactName"
          echo "artifactName=$artifactName" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - name: Build and pack artifact
        working-directory: ./Community.PowerToys.Run.Plugin.Its-MyPic
        run: |
          $name = "Its-MyPic"
          $assembly = "Community.PowerToys.Run.Plugin.$name"
          $releasePath = "./bin/${{ matrix.arch }}/Release/net8.0-windows"
          mkdir "./release/$name"

          dotnet build -c Release /p:Platform=${{ matrix.arch }}

          $files = @(
            "$releasePath/$assembly.deps.json",
            "$releasePath/$assembly.dll",
            "$releasePath/plugin.json",
            "$releasePath/Images",
            "data.json"
          )
          Copy-Item $files "./release/$name" -Recurse -Force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.name.outputs.artifactName }}.zip
          path: ./Community.PowerToys.Run.Plugin.Its-MyPic/release/
